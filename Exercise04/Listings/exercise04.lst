


ARM Macro Assembler    Page 1 Program Title for Listing Header Goes Here


    1 00000000                 TTL              Program Title for Listing Heade
r Goes Here
    2 00000000         ;*******************************************************
                       *********
    3 00000000         ;Implementation and test procedure for a simple 
    4 00000000         ;division subroutine. Given Registers R0 and R1, the
    5 00000000         ;subroutine will provide R1 / R0 = R0 remainder R1 as ou
                       tput
    6 00000000         ;Setting the C flag to 1 if div by zero occurs and 0 oth
                       erwise.
    7 00000000         ;Name:  Justin Peterson
    8 00000000         ;Date:  09/17/2015
    9 00000000         ;Class:  CMPE-250
   10 00000000         ;Section:  03 TR 2-4 PM
   11 00000000         ;-------------------------------------------------------
                       --------
   12 00000000         ;Keil Simulator Template for KL46
   13 00000000         ;R. W. Melton
   14 00000000         ;January 23, 2015
   15 00000000         ;*******************************************************
                       *********
   16 00000000         ;Assembler directives
   17 00000000                 THUMB
   19 00000000         ;*******************************************************
                       *********
   20 00000000         ;EQUates
   21 00000000         ;Vectors
   22 00000000 000000C0 
                       VECTOR_TABLE_SIZE
                               EQU              0x000000C0
   23 00000000 00000004 
                       VECTOR_SIZE
                               EQU              4           ;Bytes per vector
   24 00000000         ;Stack
   25 00000000 00000100 
                       SSTACK_SIZE
                               EQU              0x00000100
   26 00000000         
   27 00000000         ;Custom EQUates
   28 00000000 00000019 
                       MAX_DATA
                               EQU              25
   29 00000000         ;*******************************************************
                       *********
   30 00000000         ;Program
   31 00000000         ;Linker requires Reset_Handler
   32 00000000                 AREA             MyCode,CODE,READONLY
   33 00000000                 ENTRY
   34 00000000                 EXPORT           Reset_Handler
   35 00000000         Reset_Handler
   36 00000000         main
   37 00000000         ;-------------------------------------------------------
                       --------
   38 00000000         ;>>>>> begin main program code <<<<<
   39 00000000         
   40 00000000 F7FF FFFE       BL               InitData    ;Call InitData subr
                                                            outine
   41 00000004         
   42 00000004 F7FF FFFE 



ARM Macro Assembler    Page 2 Program Title for Listing Header Goes Here


                       CHECK_DIV
                               BL               LoadData    ;Call LoadData subr
                                                            outine
   43 00000008         
   44 00000008 D212            BCS              END_PROGRAM ;Out of data to pro
                                                            vide, program ends.
                                                            
   45 0000000A         
   46 0000000A         ;Load values for P and Q.
   47 0000000A 4818            LDR              R0, =Q
   48 0000000C 4918            LDR              R1, =P
   49 0000000E         
   50 0000000E 6800            LDR              R0, [R0, #0]
   51 00000010 6809            LDR              R1, [R1, #0]
   52 00000012         
   53 00000012 F000 F80E       BL               DIVU        ;Call the division 
                                                            subroutine
   54 00000016         
   55 00000016 D200            BCS              DIV_ZERO
   56 00000018 E003            B                STR_VARS
   57 0000001A         
   58 0000001A         DIV_ZERO
   59 0000001A 2000            MOVS             R0, #0
   60 0000001C 2100            MOVS             R1, #0
   61 0000001E 1E40            SUBS             R0, R0, #1
   62 00000020 1E49            SUBS             R1, R1, #1
   63 00000022         
   64 00000022         STR_VARS
   65 00000022         ;Store values in P and Q
   66 00000022 4B13            LDR              R3, =P      ; R3 <- &P
   67 00000024 6018            STR              R0, [R3, #0] ; P <- R0
   68 00000026         
   69 00000026 4B11            LDR              R3, =Q      ; R3 <- &Q
   70 00000028 6019            STR              R1, [R3, #0] ; Q <- R1
   71 0000002A         
   72 0000002A F7FF FFFE       BL               TestData    ;Call the TestData 
                                                            subroutine
   73 0000002E         
   74 0000002E E7E9            B                CHECK_DIV
   75 00000030         
   76 00000030         ;>>>>>   end main program code <<<<<
   77 00000030         
   78 00000030         ;Stay here
   79 00000030         END_PROGRAM
   80 00000030 E7FE            B                .
   81 00000032         ;-------------------------------------------------------
                       --------
   82 00000032         ;>>>>> begin subroutine code <<<<<
   83 00000032         ;*******************************************************
                       *********
   84 00000032         
   85 00000032         DIVU
   86 00000032 B40C            PUSH             {R2,R3}     ; Preserve state of
                                                             Registers, will be
                                                             using for computat
                                                            ion
   87 00000034 2800            CMP              R0, #0
   88 00000036 D000            BEQ              SET_C
   89 00000038 E007            B                NO_ERR



ARM Macro Assembler    Page 3 Program Title for Listing Header Goes Here


   90 0000003A         
   91 0000003A         SET_C
   92 0000003A         
   93 0000003A F3EF 8200       MRS              R2, APSR
   94 0000003E 2320            MOVS             R3, #0x20
   95 00000040 061B            LSLS             R3, R3, #24
   96 00000042 431A            ORRS             R2, R2, R3
   97 00000044 F382 8800       MSR              APSR, R2
   98 00000048         
   99 00000048 E00D            B                RETURN
  100 0000004A         NO_ERR
  101 0000004A 2200            MOVS             R2, #0      ; Move beginning qu
                                                            otient to R2
  102 0000004C         
  103 0000004C         DIVIDE_OP
  104 0000004C 4281            CMP              R1, R0
  105 0000004E D302            BLO              END_DIVIDE_WHILE
  106 00000050         
  107 00000050 1A09            SUBS             R1, R1, R0  ; R1 = dividend - d
                                                            ivisor
  108 00000052 1C52            ADDS             R2, R2, #1  ; Quotient += 1
  109 00000054         
  110 00000054 E7FA            B                DIVIDE_OP
  111 00000056         
  112 00000056         END_DIVIDE_WHILE
  113 00000056 0010            MOVS             R0, R2
  114 00000058         
  115 00000058 F3EF 8200       MRS              R2, APSR
  116 0000005C 2320            MOVS             R3, #0x20
  117 0000005E 0612            LSLS             R2, R2, #24
  118 00000060 439A            BICS             R2, R2, R3
  119 00000062 F382 8800       MSR              APSR, R2
  120 00000066         
  121 00000066         RETURN
  122 00000066 BC0C            POP              {R2, R3}    ;Return registers t
                                                            o previous state
  123 00000068 4770            BX               LR          ;Jump out of subrou
                                                            tine
  124 0000006A         
  125 0000006A         
  126 0000006A         
  127 0000006A         ;>>>>>   end custom subroutine code <<<<<
  128 0000006A 00 00           ALIGN
  129 0000006C         
  130 0000006C         ;Machine code provided for Exercise Four
  131 0000006C         ;R. W. Melton 9/14/2015
  132 0000006C         ;Place at the end of your MyCode AREA
  133 0000006C 00000000 
              00000000 
              00000000 
              00000000         AREA             |.ARM.__at_0x4000|,CODE,READONL
Y
  134 00000000 2600 2700 
                       InitData
                               DCI.W            0x26002700
  135 00000004 4770            DCI              0x4770
  136 00000006 B40F A316 
                       LoadData
                               DCI.W            0xB40FA316



ARM Macro Assembler    Page 4 Program Title for Listing Header Goes Here


  137 0000000A 19DB A13D       DCI.W            0x19DBA13D
  138 0000000E 428B D209       DCI.W            0x428BD209
  139 00000012 CB03 4A10       DCI.W            0xCB034A10
  140 00000016 4B11 6010       DCI.W            0x4B116010
  141 0000001A 6019 3708       DCI.W            0x60193708
  142 0000001E 2000 0840       DCI.W            0x20000840
  143 00000022 BC0F 4770       DCI.W            0xBC0F4770
  144 00000026 2001 0840       DCI.W            0x20010840
  145 0000002A E7FA            DCI              0xE7FA
  146 0000002C B40F 480C 
                       TestData
                               DCI.W            0xB40F480C
  147 00000030 A134 19C0       DCI.W            0xA13419C0
  148 00000034 19C9 3808       DCI.W            0x19C93808
  149 00000038 3908 4A07       DCI.W            0x39084A07
  150 0000003C 4B07 6812       DCI.W            0x4B076812
  151 00000040 681B C00C       DCI.W            0x681BC00C
  152 00000044 6808 4290       DCI.W            0x68084290
  153 00000048 D104 6848       DCI.W            0xD1046848
  154 0000004C 4298 D101       DCI.W            0x4298D101
  155 00000050 BC0F 4770       DCI.W            0xBC0F4770
  156 00000054 1C76 E7FB       DCI.W            0x1C76E7FB
  157 00000058                 ALIGN
  158 00000058 00000000 
                       PPtr    DCD              P
  159 0000005C 00000000 
                       QPtr    DCD              Q
  160 00000060 00000000 
                       ResultsPtr
                               DCD              Results
  161 00000064 00000000 
              00000000 
              00000001 
              00000000         DCQ              0x0000000000000000,0x0000000000
000001
  162 00000074 00000000 
              00000001 
              00000010 
              00000001         DCQ              0x0000000100000000,0x0000000100
000010
  163 00000084 00000010 
              00000002 
              00000010 
              00000004         DCQ              0x0000000200000010,0x0000000400
000010
  164 00000094 00000010 
              00000008 
              00000010 
              00000010         DCQ              0x0000000800000010,0x0000001000
000010
  165 000000A4 00000010 
              00000020 
              00000007 
              00000001         DCQ              0x0000002000000010,0x0000000100
000007
  166 000000B4 00000007 
              00000002 
              00000007 
              00000003         DCQ              0x0000000200000007,0x0000000300



ARM Macro Assembler    Page 5 Program Title for Listing Header Goes Here


000007
  167 000000C4 00000007 
              00000004 
              00000007 
              00000005         DCQ              0x0000000400000007,0x0000000500
000007
  168 000000D4 00000007 
              00000006 
              00000007 
              00000007         DCQ              0x0000000600000007,0x0000000700
000007
  169 000000E4 00000007 
              00000008 
              80000000 
              80000000         DCQ              0x0000000800000007,0x8000000080
000000
  170 000000F4 80000000 
              80000001 
              FFFFFFFF 
              000F0000         DCQ              0x8000000180000000,0x000F0000FF
FFFFFF
  171 00000104 FFFFFFFF 
              FFFFFFFF 
              FFFFFFFF 
              FFFFFFFF         DCQ              0xFFFFFFFFFFFFFFFF,0xFFFFFFFFFF
FFFFFF
  172 00000114 00000000 
              00000000 
              00000010 
              00000000         DCQ              0x0000000000000000,0x0000000000
000010
  173 00000124 00000008 
              00000000 
              00000004 
              00000000         DCQ              0x0000000000000008,0x0000000000
000004
  174 00000134 00000002 
              00000000 
              00000001 
              00000000         DCQ              0x0000000000000002,0x0000000000
000001
  175 00000144 00000000 
              00000010 
              00000007 
              00000000         DCQ              0x0000001000000000,0x0000000000
000007
  176 00000154 00000003 
              00000001 
              00000002 
              00000001         DCQ              0x0000000100000003,0x0000000100
000002
  177 00000164 00000001 
              00000003 
              00000001 
              00000002         DCQ              0x0000000300000001,0x0000000200
000001
  178 00000174 00000001 
              00000001 
              00000001 



ARM Macro Assembler    Page 6 Program Title for Listing Header Goes Here


              00000000         DCQ              0x0000000100000001,0x0000000000
000001
  179 00000184 00000000 
              00000007 
              00000001 
              00000000         DCQ              0x0000000700000000,0x0000000000
000001
  180 00000194 00000000 
              80000000 
              00001111 
              0000FFFF         DCQ              0x8000000000000000,0x0000FFFF00
001111
  181 000001A4                 ALIGN
  182 000001A4         ;*******************************************************
                       *********
  183 000001A4         ;*******************************************************
                       *********
  184 000001A4         ;Vector Table Mapped to Address 0 at Reset
  185 000001A4         ;Linker requires __Vectors to be exported
  186 000001A4                 AREA             RESET, DATA, READONLY
  187 00000000                 EXPORT           __Vectors
  188 00000000                 EXPORT           __Vectors_End
  189 00000000                 EXPORT           __Vectors_Size
  190 00000000         __Vectors
  191 00000000         ;ARM core vectors
  192 00000000 00000000        DCD              __initial_sp ;00:end of stack
  193 00000004 00000000        DCD              Reset_Handler ;reset vector
  194 00000008 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 



ARM Macro Assembler    Page 7 Program Title for Listing Header Goes Here


              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00               SPACE            (VECTOR_TABLE_SIZE - (2 * VECTO
R_SIZE))
  195 000000C0         __Vectors_End
  196 000000C0 000000C0 
                       __Vectors_Size
                               EQU              __Vectors_End - __Vectors
  197 000000C0                 ALIGN
  198 000000C0         ;*******************************************************
                       *********
  199 000000C0         ;Constants
  200 000000C0                 AREA             MyConst,DATA,READONLY
  201 00000000         ;>>>>> begin constants here <<<<<
  202 00000000         ;>>>>>   end constants here <<<<<
  203 00000000         ;*******************************************************
                       *********
  204 00000000                 AREA             |.ARM.__at_0x1FFFE000|,DATA,REA
DWRITE,ALIGN=3
  205 00000000                 EXPORT           __initial_sp
  206 00000000         ;Allocate system stack
  207 00000000                 IF               :LNOT::DEF:SSTACK_SIZE
  209                          ENDIF
  210 00000000 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 



ARM Macro Assembler    Page 8 Program Title for Listing Header Goes Here


              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 



ARM Macro Assembler    Page 9 Program Title for Listing Header Goes Here


              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00       Stack_Mem
                               SPACE            SSTACK_SIZE
  211 00000100         __initial_sp
  212 00000100         ;*******************************************************
                       *********
  213 00000100         ;Variables
  214 00000100                 AREA             MyData,DATA,READWRITE
  215 00000000         ;>>>>> begin variables here <<<<<
  216 00000000 00 00 00 
              00       P       SPACE            4
  217 00000004 00 00 00 
              00       Q       SPACE            4
  218 00000008 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 



ARM Macro Assembler    Page 10 Program Title for Listing Header Goes Here


              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00    Results SPACE            200
  219 000000D0         ;>>>>>   end variables here <<<<<
  220 000000D0                 END
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M0+ --apcs=inter
work --depend=.\objects\exercise04.d -o.\objects\exercise04.o -IC:\Users\justin
\workspace\arm-libs\Exercise04\RTE -IC:\Keil_v5\ARM\PACK\Keil\Kinetis_KLxx_DFP\
1.7.0\Device\Include -IC:\Keil_v5\ARM\CMSIS\Include --predefine="__EVAL SETA 1"
 --predefine="__UVISION_VERSION SETA 516" --predefine="MKL46Z256xxx4 SETA 1" --
list=.\listings\exercise04.lst Exercise04.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

CHECK_DIV 00000004

Symbol: CHECK_DIV
   Definitions
      At line 42 in file Exercise04.s
   Uses
      At line 74 in file Exercise04.s
Comment: CHECK_DIV used once
DIVIDE_OP 0000004C

Symbol: DIVIDE_OP
   Definitions
      At line 103 in file Exercise04.s
   Uses
      At line 110 in file Exercise04.s
Comment: DIVIDE_OP used once
DIVU 00000032

Symbol: DIVU
   Definitions
      At line 85 in file Exercise04.s
   Uses
      At line 53 in file Exercise04.s
Comment: DIVU used once
DIV_ZERO 0000001A

Symbol: DIV_ZERO
   Definitions
      At line 58 in file Exercise04.s
   Uses
      At line 55 in file Exercise04.s
Comment: DIV_ZERO used once
END_DIVIDE_WHILE 00000056

Symbol: END_DIVIDE_WHILE
   Definitions
      At line 112 in file Exercise04.s
   Uses
      At line 105 in file Exercise04.s
Comment: END_DIVIDE_WHILE used once
END_PROGRAM 00000030

Symbol: END_PROGRAM
   Definitions
      At line 79 in file Exercise04.s
   Uses
      At line 44 in file Exercise04.s
Comment: END_PROGRAM used once
MyCode 00000000

Symbol: MyCode
   Definitions
      At line 32 in file Exercise04.s
   Uses
      None
Comment: MyCode unused
NO_ERR 0000004A

Symbol: NO_ERR



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 100 in file Exercise04.s
   Uses
      At line 89 in file Exercise04.s
Comment: NO_ERR used once
RETURN 00000066

Symbol: RETURN
   Definitions
      At line 121 in file Exercise04.s
   Uses
      At line 99 in file Exercise04.s
Comment: RETURN used once
Reset_Handler 00000000

Symbol: Reset_Handler
   Definitions
      At line 35 in file Exercise04.s
   Uses
      At line 34 in file Exercise04.s
      At line 193 in file Exercise04.s

SET_C 0000003A

Symbol: SET_C
   Definitions
      At line 91 in file Exercise04.s
   Uses
      At line 88 in file Exercise04.s
Comment: SET_C used once
STR_VARS 00000022

Symbol: STR_VARS
   Definitions
      At line 64 in file Exercise04.s
   Uses
      At line 56 in file Exercise04.s
Comment: STR_VARS used once
main 00000000

Symbol: main
   Definitions
      At line 36 in file Exercise04.s
   Uses
      None
Comment: main unused
13 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.ARM.__at_0x4000 00000000

Symbol: .ARM.__at_0x4000
   Definitions
      At line 133 in file Exercise04.s
   Uses
      None
Comment: .ARM.__at_0x4000 unused
InitData 00000000

Symbol: InitData
   Definitions
      At line 134 in file Exercise04.s
   Uses
      At line 40 in file Exercise04.s
Comment: InitData used once
LoadData 00000006

Symbol: LoadData
   Definitions
      At line 136 in file Exercise04.s
   Uses
      At line 42 in file Exercise04.s
Comment: LoadData used once
PPtr 00000058

Symbol: PPtr
   Definitions
      At line 158 in file Exercise04.s
   Uses
      None
Comment: PPtr unused
QPtr 0000005C

Symbol: QPtr
   Definitions
      At line 159 in file Exercise04.s
   Uses
      None
Comment: QPtr unused
ResultsPtr 00000060

Symbol: ResultsPtr
   Definitions
      At line 160 in file Exercise04.s
   Uses
      None
Comment: ResultsPtr unused
TestData 0000002C

Symbol: TestData
   Definitions
      At line 146 in file Exercise04.s
   Uses
      At line 72 in file Exercise04.s
Comment: TestData used once
7 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

RESET 00000000

Symbol: RESET
   Definitions
      At line 186 in file Exercise04.s
   Uses
      None
Comment: RESET unused
__Vectors 00000000

Symbol: __Vectors
   Definitions
      At line 190 in file Exercise04.s
   Uses
      At line 187 in file Exercise04.s
      At line 196 in file Exercise04.s

__Vectors_End 000000C0

Symbol: __Vectors_End
   Definitions
      At line 195 in file Exercise04.s
   Uses
      At line 188 in file Exercise04.s
      At line 196 in file Exercise04.s

3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

MyConst 00000000

Symbol: MyConst
   Definitions
      At line 200 in file Exercise04.s
   Uses
      None
Comment: MyConst unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.ARM.__at_0x1FFFE000 00000000

Symbol: .ARM.__at_0x1FFFE000
   Definitions
      At line 204 in file Exercise04.s
   Uses
      None
Comment: .ARM.__at_0x1FFFE000 unused
Stack_Mem 00000000

Symbol: Stack_Mem
   Definitions
      At line 210 in file Exercise04.s
   Uses
      None
Comment: Stack_Mem unused
__initial_sp 00000100

Symbol: __initial_sp
   Definitions
      At line 211 in file Exercise04.s
   Uses
      At line 192 in file Exercise04.s
      At line 205 in file Exercise04.s

3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

MyData 00000000

Symbol: MyData
   Definitions
      At line 214 in file Exercise04.s
   Uses
      None
Comment: MyData unused
P 00000000

Symbol: P
   Definitions
      At line 216 in file Exercise04.s
   Uses
      At line 48 in file Exercise04.s
      At line 66 in file Exercise04.s
      At line 158 in file Exercise04.s

Q 00000004

Symbol: Q
   Definitions
      At line 217 in file Exercise04.s
   Uses
      At line 47 in file Exercise04.s
      At line 69 in file Exercise04.s
      At line 159 in file Exercise04.s

Results 00000008

Symbol: Results
   Definitions
      At line 218 in file Exercise04.s
   Uses
      At line 160 in file Exercise04.s
Comment: Results used once
4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

MAX_DATA 00000019

Symbol: MAX_DATA
   Definitions
      At line 28 in file Exercise04.s
   Uses
      None
Comment: MAX_DATA unused
SSTACK_SIZE 00000100

Symbol: SSTACK_SIZE
   Definitions
      At line 25 in file Exercise04.s
   Uses
      At line 210 in file Exercise04.s
Comment: SSTACK_SIZE used once
VECTOR_SIZE 00000004

Symbol: VECTOR_SIZE
   Definitions
      At line 23 in file Exercise04.s
   Uses
      At line 194 in file Exercise04.s
Comment: VECTOR_SIZE used once
VECTOR_TABLE_SIZE 000000C0

Symbol: VECTOR_TABLE_SIZE
   Definitions
      At line 22 in file Exercise04.s
   Uses
      At line 194 in file Exercise04.s
Comment: VECTOR_TABLE_SIZE used once
__Vectors_Size 000000C0

Symbol: __Vectors_Size
   Definitions
      At line 196 in file Exercise04.s
   Uses
      At line 189 in file Exercise04.s
Comment: __Vectors_Size used once
5 symbols
371 symbols in table
