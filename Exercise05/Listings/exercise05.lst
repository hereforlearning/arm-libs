


ARM Macro Assembler    Page 1 Exercise 05 Lab kit tutorial and polled serial I/O


    1 00000000                 TTL              Exercise 05 Lab kit tutorial an
d polled serial I/O
    2 00000000         
    3 00000000         ;*******************************************************
                       *********
    4 00000000         ;Brings up a serial communication device over UART0 to s
                       end
    5 00000000         ;and recieve characters from a text based terminal.
    6 00000000         ;Name:  Justin Peterson
    7 00000000         ;Date:  09/24/2015
    8 00000000         ;Class:  CMPE-250
    9 00000000         ;Section:  03 TR 2-4PM
   10 00000000         ;-------------------------------------------------------
                       --------
   11 00000000         ;Keil Template for KL46
   12 00000000         ;R. W. Melton
   13 00000000         ;April 3, 2015
   14 00000000         ;*******************************************************
                       *********
   15 00000000         ;Assembler directives
   16 00000000                 THUMB
   18 00000000         ;*******************************************************
                       *********
   19 00000000         ;Include files
   20 00000000                 GET              MKL46Z4.s   ;Included by start.
                                                            s
   22 00000000         ;*******************************************************
                       *********
   23 00000000         ;EQUates
   24 00000000         
   25 00000000         ;-------------------------------------------------------
                       --------
   26 00000000         ;PORTx_PCRn (Port x pin control register n [for pin n])
   27 00000000         ;___->10-08:Pin mux control (select 0 to 8)
   28 00000000         ;Use provided PORT_PCR_MUX_SELECT_2_MASK
   29 00000000         ;-------------------------------------------------------
                       --------
   30 00000000         ;Port A
   32 00000000 01000200 
                       PORT_PCR_SET_PTA1_UART0_RX
                               EQU              (PORT_PCR_ISF_MASK :OR:       
                             PORT_PCR_MUX_SELECT_2_MASK)
   34 00000000 01000200 
                       PORT_PCR_SET_PTA2_UART0_TX
                               EQU              (PORT_PCR_ISF_MASK :OR:       
                             PORT_PCR_MUX_SELECT_2_MASK)
   35 00000000         ;-------------------------------------------------------
                       --------
   36 00000000         ;SIM_SCGC4
   37 00000000         ;1->10:UART0 clock gate control (enabled)
   38 00000000         ;Use provided SIM_SCGC4_UART0_MASK
   39 00000000         ;-------------------------------------------------------
                       --------
   40 00000000         ;SIM_SCGC5
   41 00000000         ;1->09:Port A clock gate control (enabled)
   42 00000000         ;Use provided SIM_SCGC5_PORTA_MASK
   43 00000000         ;-------------------------------------------------------
                       --------
   44 00000000         ;SIM_SOPT2



ARM Macro Assembler    Page 2 Exercise 05 Lab kit tutorial and polled serial I/O


   45 00000000         ;01=27-26:UART0SRC=UART0 clock source select
   46 00000000         ;         (PLLFLLSEL determines MCGFLLCLK' or MCGPLLCLK/
                       2)
   47 00000000         ; 1=   16:PLLFLLSEL=PLL/FLL clock select (MCGPLLCLK/2)
   49 00000000 04000000 
                       SIM_SOPT2_UART0SRC_MCGPLLCLK
                               EQU              (1 << SIM_SOPT2_UART0SRC_SHIFT)
   51 00000000 04010000 
                       SIM_SOPT2_UART0_MCGPLLCLK_DIV2
                               EQU              (SIM_SOPT2_UART0SRC_MCGPLLCLK :
OR: SIM_SOPT2_PLLFLLSEL_MASK)
   52 00000000         ;-------------------------------------------------------
                       --------
   53 00000000         ;SIM_SOPT5
   54 00000000         ; 0->   16:UART0 open drain enable (disabled)
   55 00000000         ; 0->   02:UART0 receive data select (UART0_RX)
   56 00000000         ;00->01-00:UART0 transmit data select source (UART0_TX)
   60 00000000 00010007 
                       SIM_SOPT5_UART0_EXTERN_MASK_CLEAR
                               EQU              (SIM_SOPT5_UART0ODE_MASK :OR:  
                                SIM_SOPT5_UART0RXSRC_MASK :OR:               
                   SIM_SOPT5_UART0TXSRC_MASK)
   61 00000000         ;-------------------------------------------------------
                       --------
   62 00000000         ;UART0_BDH
   63 00000000         ;    0->  7:LIN break detect IE (disabled)
   64 00000000         ;    0->  6:RxD input active edge IE (disabled)
   65 00000000         ;    0->  5:Stop bit number select (1)
   66 00000000         ;00001->4-0:SBR[12:0] (UART0CLK / [9600 * (OSR + 1)]) 
   67 00000000         ;UART0CLK is MCGPLLCLK/2
   68 00000000         ;MCGPLLCLK is 96 MHz
   69 00000000         ;MCGPLLCLK/2 is 48 MHz
   70 00000000         ;SBR = 48 MHz / (9600 * 16) = 312.5 --> 312 = 0x138
   71 00000000 00000001 
                       UART0_BDH_9600
                               EQU              0x01
   72 00000000         ;-------------------------------------------------------
                       --------
   73 00000000         ;UART0_BDL
   74 00000000         ;26->7-0:SBR[7:0] (UART0CLK / [9600 * (OSR + 1)])
   75 00000000         ;UART0CLK is MCGPLLCLK/2
   76 00000000         ;MCGPLLCLK is 96 MHz
   77 00000000         ;MCGPLLCLK/2 is 48 MHz
   78 00000000         ;SBR = 48 MHz / (9600 * 16) = 312.5 --> 312 = 0x138
   79 00000000 00000038 
                       UART0_BDL_9600
                               EQU              0x38
   80 00000000         ;-------------------------------------------------------
                       --------
   81 00000000         ;UART0_C1
   82 00000000         ;0-->7:LOOPS=loops select (normal)
   83 00000000         ;0-->6:DOZEEN=doze enable (disabled)
   84 00000000         ;0-->5:RSRC=receiver source select (internal--no effect 
                       LOOPS=0)
   85 00000000         ;0-->4:M=9- or 8-bit mode select 
   86 00000000         ;        (1 start, 8 data [lsb first], 1 stop)
   87 00000000         ;0-->3:WAKE=receiver wakeup method select (idle)
   88 00000000         ;0-->2:IDLE=idle line type select (idle begins after sta
                       rt bit)



ARM Macro Assembler    Page 3 Exercise 05 Lab kit tutorial and polled serial I/O


   89 00000000         ;0-->1:PE=parity enable (disabled)
   90 00000000         ;0-->0:PT=parity type (even parity--no effect PE=0)
   91 00000000 00000000 
                       UART0_C1_8N1
                               EQU              0x00
   92 00000000         ;-------------------------------------------------------
                       --------
   93 00000000         ;UART0_C2
   94 00000000         ;0-->7:TIE=transmit IE for TDRE (disabled)
   95 00000000         ;0-->6:TCIE=transmission complete IE for TC (disabled)
   96 00000000         ;0-->5:RIE=receiver IE for RDRF (disabled)
   97 00000000         ;0-->4:ILIE=idle line IE for IDLE (disabled)
   98 00000000         ;1-->3:TE=transmitter enable (enabled)
   99 00000000         ;1-->2:RE=receiver enable (enabled)
  100 00000000         ;0-->1:RWU=receiver wakeup control (normal)
  101 00000000         ;0-->0:SBK=send break (disabled, normal)
  102 00000000 0000000C 
                       UART0_C2_T_R
                               EQU              (UART0_C2_TE_MASK :OR: UART0_C2
_RE_MASK)
  103 00000000         ;-------------------------------------------------------
                       --------
  104 00000000         ;UART0_C3
  105 00000000         ;0-->7:R8T9=9th data bit for receiver (not used M=0)
  106 00000000         ;           10th data bit for transmitter (not used M10=
                       0)
  107 00000000         ;0-->6:R9T8=9th data bit for transmitter (not used M=0)
  108 00000000         ;           10th data bit for receiver (not used M10=0)
  109 00000000         ;0-->5:TXDIR=UART_TX pin direction in single-wire mode
  110 00000000         ;            (no effect LOOPS=0)
  111 00000000         ;0-->4:TXINV=transmit data inversion (not inverted)
  112 00000000         ;0-->3:ORIE=overrun IE for OR (disabled)
  113 00000000         ;0-->2:NEIE=noise error IE for NF (disabled)
  114 00000000         ;0-->1:FEIE=framing error IE for FE (disabled)
  115 00000000         ;0-->0:PEIE=parity error IE for PF (disabled)
  116 00000000 00000000 
                       UART0_C3_NO_TXINV
                               EQU              0x00
  117 00000000         ;-------------------------------------------------------
                       --------
  118 00000000         ;UART0_C4
  119 00000000         ;    0-->  7:MAEN1=match address mode enable 1 (disabled
                       )
  120 00000000         ;    0-->  6:MAEN2=match address mode enable 2 (disabled
                       )
  121 00000000         ;    0-->  5:M10=10-bit mode select (not selected)
  122 00000000         ;01111-->4-0:OSR=over sampling ratio (16)
  123 00000000         ;               = 1 + OSR for 3 <= OSR <= 31
  124 00000000         ;               = 16 for 0 <= OSR <= 2 (invalid values)
  125 00000000 0000000F 
                       UART0_C4_OSR_16
                               EQU              0x0F
  126 00000000 0000000F 
                       UART0_C4_NO_MATCH_OSR_16
                               EQU              UART0_C4_OSR_16
  127 00000000         ;-------------------------------------------------------
                       --------
  128 00000000         ;UART0_C5
  129 00000000         ;  0-->  7:TDMAE=transmitter DMA enable (disabled)



ARM Macro Assembler    Page 4 Exercise 05 Lab kit tutorial and polled serial I/O


  130 00000000         ;  0-->  6:Reserved; read-only; always 0
  131 00000000         ;  0-->  5:RDMAE=receiver full DMA enable (disabled)
  132 00000000         ;000-->4-2:Reserved; read-only; always 0
  133 00000000         ;  0-->  1:BOTHEDGE=both edge sampling (rising edge only
                       )
  134 00000000         ;  0-->  0:RESYNCDIS=resynchronization disable (enabled)
                       
  135 00000000 00000000 
                       UART0_C5_NO_DMA_SSR_SYNC
                               EQU              0x00
  136 00000000         ;-------------------------------------------------------
                       --------
  137 00000000         ;UART0_S1
  138 00000000         ;0-->7:TDRE=transmit data register empty flag; read-only
                       
  139 00000000         ;0-->6:TC=transmission complete flag; read-only
  140 00000000         ;0-->5:RDRF=receive data register full flag; read-only
  141 00000000         ;1-->4:IDLE=idle line flag; write 1 to clear (clear)
  142 00000000         ;1-->3:OR=receiver overrun flag; write 1 to clear (clear
                       )
  143 00000000         ;1-->2:NF=noise flag; write 1 to clear (clear)
  144 00000000         ;1-->1:FE=framing error flag; write 1 to clear (clear)
  145 00000000         ;1-->0:PF=parity error flag; write 1 to clear (clear)
  146 00000000 0000001F 
                       UART0_S1_CLEAR_FLAGS
                               EQU              0x1F
  147 00000000         ;-------------------------------------------------------
                       --------
  148 00000000         ;UART0_S2
  149 00000000         ;1-->7:LBKDIF=LIN break detect interrupt flag (clear)
  150 00000000         ;             write 1 to clear
  151 00000000         ;1-->6:RXEDGIF=RxD pin active edge interrupt flag (clear
                       )
  152 00000000         ;              write 1 to clear
  153 00000000         ;0-->5:(reserved); read-only; always 0
  154 00000000         ;0-->4:RXINV=receive data inversion (disabled)
  155 00000000         ;0-->3:RWUID=receive wake-up idle detect
  156 00000000         ;0-->2:BRK13=break character generation length (10)
  157 00000000         ;0-->1:LBKDE=LIN break detect enable (disabled)
  158 00000000         ;0-->0:RAF=receiver active flag; read-only
  159 00000000 000000C0 
                       UART0_S2_NO_RXINV_BRK10_NO_LBKDETECT_CLEAR_FLAGS
                               EQU              0xC0
  160 00000000         ;-------------------------------------------------------
                       --------
  161 00000000         
  162 00000000         ;*******************************************************
                       *********
  163 00000000         ;Program
  164 00000000         ;Linker requires Reset_Handler
  165 00000000                 AREA             MyCode,CODE,READONLY
  166 00000000                 ENTRY
  167 00000000                 EXPORT           Reset_Handler
  168 00000000                 IMPORT           Startup
  169 00000000         Reset_Handler
  170 00000000         main
  171 00000000         ;-------------------------------------------------------
                       --------
  172 00000000         ;Mask interrupts



ARM Macro Assembler    Page 5 Exercise 05 Lab kit tutorial and polled serial I/O


  173 00000000 B672            CPSID            I
  174 00000002         ;KL46 system startup with 48-MHz system clock
  175 00000002 F7FF FFFE       BL               Startup
  176 00000006         ;-------------------------------------------------------
                       --------
  177 00000006         ;>>>>> begin main program code <<<<<
  178 00000006         
  179 00000006         ;>>>>>   end main program code <<<<<
  180 00000006         ;Stay here
  181 00000006 E7FE            B                .
  182 00000008         ;>>>>> begin subroutine code <<<<<
  183 00000008         
  184 00000008         ;Send a character out of UART0
  185 00000008         PutChar
  186 00000008 B40E            PUSH             {R1, R2, R3} ; Push varibles on
                                                             the stack to avoid
                                                             loss
  187 0000000A         
  188 0000000A         ;Poll TDRE Until UART0 is ready for transmit
  189 0000000A 4922            LDR              R1, =UART0_BASE
  190 0000000C 2280            MOVS             R2, #UART0_S1_TDRE_MASK
  191 0000000E         
  192 0000000E         PollTx
  193 0000000E 790B            LDRB             R3, [R1, #UART0_S1_OFFSET]
  194 00000010 4013            ANDS             R3, R3, R2
  195 00000012 D0FC            BEQ              PollTx
  196 00000014         
  197 00000014         ;Transmit Character Stored in R0
  198 00000014 71C8            STRB             R0, [R1, #UART0_D_OFFSET]
  199 00000016         
  200 00000016         ;Pop original register values off the stack
  201 00000016 BC0E            POP              {R1, R2, R3}
  202 00000018         
  203 00000018 4770            BX               LR
  204 0000001A         
  205 0000001A         Init_UART0_Polling
  206 0000001A         
  207 0000001A         ;Allocate R0-2 for Ri=k 
  208 0000001A         ;Store prevoius values for restoration
  209 0000001A B407            PUSH             {R0, R1, R2}
  210 0000001C         
  211 0000001C         ;Select MCGPLLCLK / 2 as UART0 clock source 
  212 0000001C 481E            LDR              R0,=SIM_SOPT2
  213 0000001E 491F            LDR              R1,=SIM_SOPT2_UART0SRC_MASK
  214 00000020 6802            LDR              R2,[R0,#0]
  215 00000022 438A            BICS             R2,R2,R1
  216 00000024 491E            LDR              R1,=SIM_SOPT2_UART0_MCGPLLCLK_D
IV2
  217 00000026 430A            ORRS             R2,R2,R1
  218 00000028 6001            STR              R1,[R0,#0]
  219 0000002A         
  220 0000002A         ;Enable external connection for UART0 
  221 0000002A 481E            LDR              R0,=SIM_SOPT5
  222 0000002C 491E            LDR              R1,=SIM_SOPT5_UART0_EXTERN_MASK
_CLEAR
  223 0000002E 6802            LDR              R2,[R0,#0]
  224 00000030 438A            BICS             R2,R2,R1
  225 00000032 6002            STR              R2,[R0,#0]
  226 00000034         



ARM Macro Assembler    Page 6 Exercise 05 Lab kit tutorial and polled serial I/O


  227 00000034         ;Enable clock for UART0 module LDR Ri,=SIM_SCGC4
  228 00000034 491D            LDR              R1,=SIM_SCGC4_UART0_MASK
  229 00000036 6802            LDR              R2,[R0,#0]
  230 00000038 430A            ORRS             R2,R2,R1
  231 0000003A 6002            STR              R2,[R0,#0]
  232 0000003C         
  233 0000003C         ;Enable clock for Port A module 
  234 0000003C 481C            LDR              R0,=SIM_SCGC5
  235 0000003E 491D            LDR              R1,=SIM_SCGC5_PORTA_MASK
  236 00000040 6802            LDR              R2,[R0,#0]
  237 00000042 430A            ORRS             R2,R2,R1
  238 00000044 6002            STR              R2,[R0,#0]
  239 00000046         
  240 00000046         ;Connect PORT A Pin 1 (PTA1) to UART0 Rx (J1 Pin 02) 
  241 00000046 481C            LDR              R0,=PORTA_PCR1
  242 00000048 491C            LDR              R1,=PORT_PCR_SET_PTA1_UART0_RX
  243 0000004A 6001            STR              R1,[R0,#0]
  244 0000004C         
  245 0000004C         ;Connect PORT A Pin 2 (PTA2) to UART0 Tx (J1 Pin 04) 
  246 0000004C 481C            LDR              R0,=PORTE_PCR0
  247 0000004E 491B            LDR              R1,=PORT_PCR_SET_PTA2_UART0_TX
  248 00000050 6001            STR              R1,[R0,#0]
  249 00000052         
  250 00000052         ;Disable UART0 receiver and transmitter 
  251 00000052 4810            LDR              R0,=UART0_BASE
  252 00000054 210C            MOVS             R1,#UART0_C2_T_R
  253 00000056 78C2            LDRB             R2,[R0,#UART0_C2_OFFSET]
  254 00000058 438A            BICS             R2,R2,R1
  255 0000005A 70C2            STRB             R2,[R0,#UART0_C2_OFFSET]
  256 0000005C         ;Set UART0 for 9600 baud, 8N1 protocol
  257 0000005C 2101            MOVS             R1,#UART0_BDH_9600
  258 0000005E 7001            STRB             R1,[R0,#UART0_BDH_OFFSET]
  259 00000060 2138            MOVS             R1,#UART0_BDL_9600
  260 00000062 7001            STRB             R1,[R0,#UART0_BDL0_OFFSET]
  261 00000064 2100            MOVS             R1,#UART0_C1_8N1
  262 00000066 7081            STRB             R1,[R0,#UART0_C1_OFFSET]
  263 00000068 2100            MOVS             R1,#UART0_C3_NO_TXINV
  264 0000006A 7181            STRB             R1,[R0,#UART0_C3_OFFSET]
  265 0000006C 210F            MOVS             R1,#UART0_C4_NO_MATCH_OSR_16
  266 0000006E 7281            STRB             R1,[R0,#UART0_C4_OFFSET]
  267 00000070 2100            MOVS             R1,#UART0_C5_NO_DMA_SSR_SYNC
  268 00000072 72C1            STRB             R1,[R0,#UART0_C5_OFFSET]
  269 00000074 211F            MOVS             R1,#UART0_S1_CLEAR_FLAGS
  270 00000076 7101            STRB             R1,[R0,#UART0_S1_OFFSET]
  272 00000078 21C0            MOVS             R1,      #UART0_S2_NO_RXINV_BR
K10_NO_LBKDETECT_CLEAR_FLAGS
  273 0000007A 7141            STRB             R1,[R0,#UART0_S2_OFFSET]
  274 0000007C         
  275 0000007C         ;Enable UART0 receiver and transmitter 
  276 0000007C 210C            MOVS             R1,#UART0_C2_T_R
  277 0000007E 70C1            STRB             R1,[R0,#UART0_C2_OFFSET]
  278 00000080         
  279 00000080         ;Pop prevous R0-2 values off the stack.
  280 00000080 BC07            POP              {R0, R1, R2}
  281 00000082         
  282 00000082 4770            BX               LR
  283 00000084         
  284 00000084         ;-------------------------------------------------------
                       ------------



ARM Macro Assembler    Page 7 Exercise 05 Lab kit tutorial and polled serial I/O


  285 00000084         
  286 00000084         ;Receive a character from UART0
  287 00000084         ;Store in Register R0
  288 00000084         GetChar
  289 00000084 B40E            PUSH             {R1, R2, R3} ; Push varibles on
                                                             the stack to avoid
                                                             loss
  290 00000086 4903            LDR              R1, =UART0_BASE
  291 00000088 2220            MOVS             R2, #UART0_S1_RDRF_MASK
  292 0000008A         PollRx
  293 0000008A 790B            LDRB             R3, [R1, #UART0_S1_OFFSET]
  294 0000008C 4013            ANDS             R3, R3, R2
  295 0000008E D0FC            BEQ              PollRx
  296 00000090         
  297 00000090         ;Receive character and store in R0
  298 00000090 79C8            LDRB             R0, [R1, #UART0_D_OFFSET]
  299 00000092         
  300 00000092 4770            BX               LR
  301 00000094         
  302 00000094         ;>>>>>   end subroutine code <<<<<
  303 00000094                 ALIGN
  304 00000094         ;*******************************************************
                       *********
  305 00000094         ;Vector Table Mapped to Address 0 at Reset
  306 00000094         ;Linker requires __Vectors to be exported
  307 00000094 4006A000 
              40048004 
              0C000000 
              04010000 
              40048010 
              00010007 
              00000400 
              40048038 
              00000200 
              40049004 
              01000200 
              4004D000         AREA             RESET, DATA, READONLY
  308 00000000                 EXPORT           __Vectors
  309 00000000                 EXPORT           __Vectors_End
  310 00000000                 EXPORT           __Vectors_Size
  311 00000000                 IMPORT           __initial_sp
  312 00000000                 IMPORT           Dummy_Handler
  313 00000000         __Vectors
  314 00000000         ;ARM core vectors
  315 00000000 00000000        DCD              __initial_sp ;00:end of stack
  316 00000004 00000000        DCD              Reset_Handler ;01:reset vector
  317 00000008 00000000        DCD              Dummy_Handler ;02:NMI
  318 0000000C 00000000        DCD              Dummy_Handler ;03:hard fault
  319 00000010 00000000        DCD              Dummy_Handler ;04:(reserved)
  320 00000014 00000000        DCD              Dummy_Handler ;05:(reserved)
  321 00000018 00000000        DCD              Dummy_Handler ;06:(reserved)
  322 0000001C 00000000        DCD              Dummy_Handler ;07:(reserved)
  323 00000020 00000000        DCD              Dummy_Handler ;08:(reserved)
  324 00000024 00000000        DCD              Dummy_Handler ;09:(reserved)
  325 00000028 00000000        DCD              Dummy_Handler ;10:(reserved)
  326 0000002C 00000000        DCD              Dummy_Handler ;11:SVCall (super
                                                            visor call)
  327 00000030 00000000        DCD              Dummy_Handler ;12:(reserved)
  328 00000034 00000000        DCD              Dummy_Handler ;13:(reserved)



ARM Macro Assembler    Page 8 Exercise 05 Lab kit tutorial and polled serial I/O


  329 00000038 00000000        DCD              Dummy_Handler ;14:PendableSrvRe
                                                            q (pendable request
                                                             
  330 0000003C         ;   for system service)
  331 0000003C 00000000        DCD              Dummy_Handler ;15:SysTick (syst
                                                            em tick timer)
  332 00000040 00000000        DCD              Dummy_Handler ;16:DMA channel 0
                                                             xfer complete/erro
                                                            r
  333 00000044 00000000        DCD              Dummy_Handler ;17:DMA channel 1
                                                             xfer complete/erro
                                                            r
  334 00000048 00000000        DCD              Dummy_Handler ;18:DMA channel 2
                                                             xfer complete/erro
                                                            r
  335 0000004C 00000000        DCD              Dummy_Handler ;19:DMA channel 3
                                                             xfer complete/erro
                                                            r
  336 00000050 00000000        DCD              Dummy_Handler ;20:(reserved)
  337 00000054 00000000        DCD              Dummy_Handler ;21:command compl
                                                            ete; read collision
                                                            
  338 00000058 00000000        DCD              Dummy_Handler ;22:low-voltage d
                                                            etect;
  339 0000005C         ;   low-voltage warning
  340 0000005C 00000000        DCD              Dummy_Handler ;23:low leakage w
                                                            akeup
  341 00000060 00000000        DCD              Dummy_Handler ;24:I2C0
  342 00000064 00000000        DCD              Dummy_Handler ;25:I2C1
  343 00000068 00000000        DCD              Dummy_Handler ;26:SPI0 (all IRQ
                                                             sources)
  344 0000006C 00000000        DCD              Dummy_Handler ;27:SPI1 (all IRQ
                                                             sources)
  345 00000070 00000000        DCD              Dummy_Handler ;28:UART0 (status
                                                            ; error)
  346 00000074 00000000        DCD              Dummy_Handler ;29:UART1 (status
                                                            ; error)
  347 00000078 00000000        DCD              Dummy_Handler ;30:UART2 (status
                                                            ; error)
  348 0000007C 00000000        DCD              Dummy_Handler ;31:ADC0
  349 00000080 00000000        DCD              Dummy_Handler ;32:CMP0
  350 00000084 00000000        DCD              Dummy_Handler ;33:TPM0
  351 00000088 00000000        DCD              Dummy_Handler ;34:TPM1
  352 0000008C 00000000        DCD              Dummy_Handler ;35:TPM2
  353 00000090 00000000        DCD              Dummy_Handler ;36:RTC (alarm)
  354 00000094 00000000        DCD              Dummy_Handler ;37:RTC (seconds)
                                                            
  355 00000098 00000000        DCD              Dummy_Handler ;38:PIT (all IRQ 
                                                            sources)
  356 0000009C 00000000        DCD              Dummy_Handler ;39:I2S0
  357 000000A0 00000000        DCD              Dummy_Handler ;40:USB0
  358 000000A4 00000000        DCD              Dummy_Handler ;41:DAC0
  359 000000A8 00000000        DCD              Dummy_Handler ;42:TSI0
  360 000000AC 00000000        DCD              Dummy_Handler ;43:MCG
  361 000000B0 00000000        DCD              Dummy_Handler ;44:LPTMR0
  362 000000B4 00000000        DCD              Dummy_Handler ;45:Segment LCD
  363 000000B8 00000000        DCD              Dummy_Handler ;46:PORTA pin det
                                                            ect
  364 000000BC 00000000        DCD              Dummy_Handler ;47:PORTC and POR



ARM Macro Assembler    Page 9 Exercise 05 Lab kit tutorial and polled serial I/O


                                                            TD pin detect
  365 000000C0         __Vectors_End
  366 000000C0 000000C0 
                       __Vectors_Size
                               EQU              __Vectors_End - __Vectors
  367 000000C0                 ALIGN
  368 000000C0         ;*******************************************************
                       *********
  369 000000C0         ;Constants
  370 000000C0                 AREA             MyConst,DATA,READONLY
  371 00000000         ;>>>>> begin constants here <<<<<
  372 00000000         ;>>>>>   end constants here <<<<<
  373 00000000                 ALIGN
  374 00000000         ;*******************************************************
                       *********
  375 00000000         ;Variables
  376 00000000                 AREA             MyData,DATA,READWRITE
  377 00000000         ;>>>>> begin variables here <<<<<
  378 00000000         ;>>>>>   end variables here <<<<<
  379 00000000                 ALIGN
  380 00000000                 END
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M0+ --apcs=inter
work --depend=.\objects\exercise05.d -o.\objects\exercise05.o -IC:\Users\justin
\workspace\arm-libs\Exercise05\RTE -IC:\Keil_v5\ARM\PACK\Keil\Kinetis_KLxx_DFP\
1.7.0\Device\Include -IC:\Keil_v5\ARM\CMSIS\Include --predefine="__EVAL SETA 1"
 --predefine="__UVISION_VERSION SETA 516" --predefine="MKL46Z256xxx4 SETA 1" --
list=.\listings\exercise05.lst Exercise05.s
